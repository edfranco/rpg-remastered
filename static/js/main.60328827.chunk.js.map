{"version":3,"sources":["Components/Nav/Nav.js","Constants/constants.js","Components/Landing/Landing.js","Components/Profile/Profile.js","Components/Game/StatRoll/StatRoll.js","Components/Game/CharnameForm/CharnameForm.js","Components/Game/Game.js","config/routes.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","landingImages","name","imageUrl","SKILLS","Landing","state","imageIndex","carouselTimer","undefined","incrementCarousel","nextIndex","hasPassedLastIndex","IMAGES","length","setState","setLandingImage","setInterval","this","id","src","alt","to","Component","Profile","strength","dexterity","constitution","intelligence","wisdom","charisma","hp","dmg","StatRoll","skillIndex","skillRank","setStat","displayStat","onClick","CharnameForm","handleChange","submitName","type","value","onChange","Game","displayStatRoll","hasExceededArrLimit","stat","Math","floor","random","event","target","withRouter","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60328827.chunk.js","sourcesContent":["import React from 'react';\n// styles\nimport './Nav.css';\nconst Nav = () => {\n    return (\n        <nav className=\"nav\">\n            <div className=\"header\">\n                <h1>Not a Good RPG</h1>\n                <h4>A Game By Eduardo Franco</h4>\n            </div>\n            <div className=\"personal-links\">\n                <a href=\"http://linkedin.com/in/edfrancocano\">\n                    <i className=\"fab fa-linkedin\"></i>\n                </a>\n                <a href=\"http://github.com/edfranco/rpg-remastered\">\n                    <i className=\"fab fa-github-square\"></i>\n                </a>\n                <a href=\"http://eduardofranco.me\">\n                    <i className=\"fas fa-book-open\"></i>\n                </a>\n            </div>\n        </nav>\n    );\n};\n\nexport default Nav;\n","export const landingImages = [\n    {\n        name: \"Dungeons and Dragons\",\n        imageUrl: \"https://cdnb.artstation.com/p/assets/images/images/007/383/287/large/caio-monteiro-pzo9097-nox-fight.jpg?1505763540\"\n    },\n    {\n        name: \"Skyrim\",\n        imageUrl: \"https://i.redd.it/ikkjgm70fgm01.jpg\"\n    },\n    {\n        name: \"Fallout\",\n        imageUrl: \"https://i.ytimg.com/vi/Vr-0gDy3fZU/maxresdefault.jpg\",\n    },\n    {\n        name: \"The Witcher\",\n        imageUrl: \"https://cdn.shopify.com/s/files/1/2241/4395/products/the_witcher_3_wild_hunt_witcher_griffin-HD_f9782515-95ec-4b4d-aa15-299c89c1505e_1024x1024.jpg?v=1536936942\"\n    }\n];\n\nexport const SKILLS = [\n    'strength',\n    'dexterity',\n    'constitution',\n    'intelligence',\n    'wisdom',\n    'charisma'\n]","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// internal components\nimport { landingImages as IMAGES } from '../../Constants/constants';\n// internal styles\nimport './Landing.css';\n\nclass Landing extends Component {\n    state = {\n        imageIndex: 0\n    };\n\n    componentDidMount() {\n        this.setLandingImage();\n    }\n\n    carouselTimer = undefined;\n\n    incrementCarousel = () => {\n        const nextIndex = this.state.imageIndex + 1;\n        const hasPassedLastIndex = nextIndex >= IMAGES.length;\n        this.setState({ imageIndex: hasPassedLastIndex ? 0 : nextIndex });\n    }\n\n    setLandingImage = () => {\n        this.carouselTimer = setInterval(this.incrementCarousel, 3000)\n    };\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"header\">\n                    <h1>Not a Good RPG</h1>\n                    <h4>A Game By <a href=\"http://eduardofranco.me\">Eduardo Franco</a></h4>\n                </div>\n                <div className=\"landing-image-container\">\n                    <img id=\"landing-image\" src={IMAGES[this.state.imageIndex].imageUrl} alt={`${IMAGES[this.state.imageIndex].name} game artwork`} />\n                </div>\n                <h4>Do You like Roleplaying Games?</h4>\n                <p>Are you a fan of table top games like Dungeons and Dragons?</p>\n                <p>Did you you enjoy games like the Elder Scrolls Games, Fallout, and The Witcher?</p>\n                <p>Awesome! This is not the game for you. This is not a very good RPG but it's a cool concept\n                    I wanted to play with. This game's ambition is to have the basic RPG elements such as, branching storylines, quests, and inventory management</p>\n\n                <p>So far this game currently has a dice rolling mechanic to \"roll\" a character. The next step is to create a race mechanic and use that to calculate hit and damage points</p>\n                <Link to=\"/game-start\">\n                    <button>Start</button>\n                </Link>\n            </div>\n        );\n    }\n};\n\nexport default Landing;\n","import React from 'react';\n// internal styles\nimport './Profile.css';\n\nconst Profile = ({ strength,\n    name,\n    dexterity,\n    constitution,\n    intelligence,\n    wisdom,\n    charisma,\n    hp,\n    dmg\n}) => {\n    return (\n        <div className=\"profile\">\n            <h1>{name}</h1>\n            <div className=\"battle-stats\">\n                <h4>HP: {hp} </h4>\n                <h4>DMG: {dmg}</h4>\n            </div>\n\n            <img className=\"user-image\" src=\"https://i.imgur.com/lixfsa3.jpg\" />\n            <ul>\n                <li>Strength: {strength} </li>\n                <li>Dexterity: {dexterity}</li>\n                <li>Constituion: {constitution}</li>\n                <li>Intelligence: {intelligence}</li>\n                <li>Wisdom: {wisdom}</li>\n                <li>Charisma {charisma}</li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { SKILLS } from '../../../Constants/constants';\n// internal styles\nimport './StatRoll.css';\n\nconst StatRoll = ({ skillIndex, skillRank, setStat, displayStat }) => {\n    return (\n        <div className=\"stat-roll\">\n            <h1>Roll the Dice For Stats</h1>\n            <h4>Roll for {SKILLS[skillIndex]}</h4>\n            <div className=\"dice\">\n                <h1 className=\"d20-number\">{skillRank}</h1>\n            </div>\n            <button onClick={setStat}>Roll</button>\n            {displayStat && <p>Your {SKILLS[skillIndex - 1]} is now {skillRank}  </p>}\n        </div>\n    );\n};\n\nexport default StatRoll;\n","import React from 'react';\n// internal styles\nimport './CharnameForm.css';\n\nconst CharnameForm = ({ name, handleChange, submitName }) => {\n    return (\n        <div className=\"charname-form\">\n            <h1>What is your name?</h1>\n            <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n            <button onClick={submitName}>Submit</button>\n        </div>\n    );\n};\n\nexport default CharnameForm;\n","import React, { Component } from 'react';\n// internal components\nimport Profile from '../Profile/Profile';\nimport StatRoll from './StatRoll/StatRoll';\nimport CharnameForm from './CharnameForm/CharnameForm';\nimport { SKILLS } from '../../Constants/constants';\n// internal styles\nimport './Game.css'\n\nclass Game extends Component {\n    state = {\n        skillIndex: 0,\n        skillRank: 0,\n        name: 'Adventurer',\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0,\n        hp: 0,\n        dmg: 0,\n        displayStat: false,\n        displayStatRoll: false\n    };\n\n    setStat = () => {\n        const hasExceededArrLimit = this.state.skillIndex >= SKILLS.length - 1;\n        const stat = Math.floor(Math.random() * 20) + 1;\n        this.setState({\n            [SKILLS[this.state.skillIndex]]: stat,\n            skillRank: stat,\n            skillIndex: hasExceededArrLimit ? 0 : this.state.skillIndex + 1,\n            displayStat: true\n        });\n    };\n\n    submitName = () => {\n        this.setState({ displayStatRoll: true });\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"game\">\n                {this.state.displayStatRoll\n                    ? <StatRoll skillIndex={this.state.skillIndex} skillRank={this.state.skillRank} setStat={this.setStat} displayStat={this.state.displayStat} />\n                    : <CharnameForm name={this.state.name} handleChange={this.handleChange} submitName={this.submitName} />\n                }\n                <div className=\"profile-container\">\n                    <Profile\n                        name={this.state.name}\n                        strength={this.state.strength}\n                        dexterity={this.state.dexterity}\n                        constitution={this.state.constitution}\n                        intelligence={this.state.intelligence}\n                        wisdom={this.state.wisdom}\n                        charisma={this.state.charisma}\n                        hp={this.state.hp}\n                        dmg={this.state.dmg}\n                    />\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Game;\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n// internal components\nimport Landing from '../Components/Landing/Landing';\nimport Game from '../Components/Game/Game';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/rpg-remastered\" component={Landing} />\n            <Route path=\"/game-start\" component={Game} />\n        </Switch>\n    );\n};\nexport default withRouter(Routes);\n","import React from 'react';\n// internal components\nimport Nav from './Components/Nav/Nav';\nimport Routes from './config/routes';\n// styles\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <main>\n        <Routes />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}